/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IRedeemFill, IRedeemFillInterface } from "../IRedeemFill";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedWormholeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleBridgeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleAttestation",
            type: "bytes",
          },
        ],
        internalType: "struct OrderResponse",
        name: "response",
        type: "tuple",
      },
    ],
    name: "redeemFill",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "senderChain",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct RedeemedFill",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRedeemFill__factory {
  static readonly abi = _abi;
  static createInterface(): IRedeemFillInterface {
    return new utils.Interface(_abi) as IRedeemFillInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRedeemFill {
    return new Contract(address, _abi, signerOrProvider) as IRedeemFill;
  }
}
