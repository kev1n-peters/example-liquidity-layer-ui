/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NativeSwapV2, NativeSwapV2Interface } from "../NativeSwapV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wormholeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_orderRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wrappedNativeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32",
      },
    ],
    name: "AddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "_success",
        type: "uint8",
      },
    ],
    name: "SwapResult",
    type: "event",
  },
  {
    inputs: [],
    name: "ORDER_ROUTER",
    outputs: [
      {
        internalType: "contract IOrderRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_FAILED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_ROUTER",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_SUCCEEDED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WORMHOLE",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRAPPED_NATIVE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeSwapInParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "estimatedAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "recipientAddress",
            type: "bytes32",
          },
          {
            internalType: "address[2]",
            name: "path",
            type: "address[2]",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
        ],
        internalType: "struct NativeSwapBase.RecvSwapInParameters",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetAmountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "targetChainRecipient",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct NativeSwapBase.ExactInParameters",
        name: "swapParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
    ],
    name: "encodeSwapInParameters",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedWormholeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleBridgeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleAttestation",
            type: "bytes",
          },
        ],
        internalType: "struct OrderResponse",
        name: "response",
        type: "tuple",
      },
    ],
    name: "handleOrderRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedWormholeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleBridgeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleAttestation",
            type: "bytes",
          },
        ],
        internalType: "struct OrderResponse",
        name: "orderResponse",
        type: "tuple",
      },
    ],
    name: "recvAndSwapExactNativeIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "contractAddress",
        type: "bytes32",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "relayerFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setRelayerFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetAmountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "targetChainRecipient",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct NativeSwapBase.ExactInParameters",
        name: "swapParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint16",
        name: "targetChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "wormholeSlippage",
        type: "uint256",
      },
    ],
    name: "swapExactNativeInAndTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61014034620001a857601f6200251f38819003918201601f19168301916001600160401b03831184841017620001ad5780849260a094604052833981010312620001a8576200004e81620001c3565b6200005c60208301620001c3565b916200006b60408201620001c3565b906200008860806200008060608401620001c3565b9201620001c3565b90610100948561ffff1960005416176000553360805260018060a01b03938480921660a0521660c05260e052835261012091168152604051906123469283620001d9843960805183818161016d015281816104310152610c7f015260a0518381816105fe0152818161064c0152610f28015260c0518381816101b2015281816108230152818161093f01528181610df00152611a9a015260e051838181610281015281816105810152818161084701528181610d8b0152611a3301525182818161023c0152818161053601528181610699015281816106de01528181611b6c01528181611e6501528181611eaf0152611f4f0152518181816101f701528181610744015281816107c801528181611c1601528181611ca00152611d220152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001a85756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c9081630a99545914610f575750806335e78cfe14610f125780633be5746f14610d5c57806351e2d7b514610c5c578063721a432614610c395780637a3abca2146104a6578063820576011461047357806393900f071461040f578063943650e914610326578063a6aa277214610306578063b38f92c5146102b0578063bb09d9b71461026b578063be80a39114610226578063c6005893146101e1578063c60c961a1461019c578063d5f39488146101575763f533217f0361000f573461015457610100366003190112610154576100fc36611069565b9060c435906001600160401b03821161015457366023830112156101545761015061013c84610133366004870135602488016110e8565b60e435916114a2565b604051918291602083526020830190611161565b0390f35b80fd5b50346101545780600319360112610154576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101545780600319360112610154576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101545780600319360112610154576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101545780600319360112610154576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101545780600319360112610154576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b506102c26102bd36610f9d565b611a0e565b90604051918291602080840190808552835180925280604086019401925b8281106102ef57505050500390f35b8351855286955093810193928101926001016102e0565b503461015457806003193601126101545760ff6020915416604051908152f35b503461015457602080600319360112610407576004356001600160401b03811161040b573660238201121561040b57806004013590836103658361104e565b91610373604051938461102d565b838352366024858301011161040757938361039b94602483989701838601378301015261159c565b60405191815183528382015184840152604082015193604084019491945b600286106103e85760e08560a0866060810151608084015262ffffff60808201511682840152015160c0820152f35b82516001600160a01b03168152600195909501949181019181016103b9565b5080fd5b8280fd5b50346101545760403660031901126101545761ffff61042c610f87565b6104607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611872565b1681526002602052602435604082205580f35b503461015457602036600319011261015457604060209161ffff610495610f87565b168152600283522054604051908152f35b50366003190161012081126104075760c0136101545760c4356001600160401b0381116104075736602382011215610407576001600160401b0381600401351161040757366024826004013560051b830101116104075760e43561ffff8116810361040b5760048281013503610c0557816004013515610ba05761052c60248301611981565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911603610bb457816004013560011015610ba05761057760448301611981565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911603610b635761ffff81168352600260205260408320546105c7610104358261158f565b6024351115610b1e5761ffff8216845260016020526040842054928315610ad957604051631a90a21960e01b8152936020856004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa948515610ace578695610a96575b50604051631a90a21960e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109d8578791610a64575b50341115610a2a576106968534611259565b867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561015457604051630d0e30db60e41b815291829060049082907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156109d857610a17575b5061071e8534611259565b8260040135600211610a1357610773816001600160a01b0361074260248701611981565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691166118be565b6002604051916338ed173960e01b835260a48301906004840152602435602484015260a0604484015252868160c4810160248601835b600281106109e3575050306064830152608480359083015281900381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19485156109d85761089f61081360209761ffff948b916109b6575b5061146f565b519561086c876001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116907f0000000000000000000000000000000000000000000000000000000000000000166118be565b61087b61010435602435611259565b9561089961088836611069565b9136906024816004013591016110e8565b906114a2565b93604051956108ad87610ff7565b865286860152166040840152606083015260808201523360a082015260405192838080936359a1c16960e11b82528560048301528051602483015285810151604483015261ffff604082015116606483015260608101516084830152610922608082015160c060a485015260e4840190611161565b60a0909101516001600160a01b0390811660c484015291900392907f0000000000000000000000000000000000000000000000000000000000000000165af180156109ab5761096f575080f35b6020813d6020116109a3575b816109886020938361102d565b8101031261040757516001600160401b038116036101545780f35b3d915061097b565b6040513d84823e3d90fd5b6109d291503d808d833e6109ca818361102d565b810190611995565b3861080d565b6040513d89823e3d90fd5b909350915060019060209081906001600160a01b03610a01876110d4565b16815201930191019183918a936107a9565b8680fd5b610a2390969196610fce565b9438610713565b60405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742076616c756560701b6044820152606490fd5b90506020813d602011610a8e575b81610a7f6020938361102d565b81010312610a13575138610684565b3d9150610a72565b9094506020813d602011610ac6575b81610ab26020938361102d565b81010312610ac257519338610636565b8580fd5b3d9150610aa5565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152601e60248201527f74617267657420636f6e7472616374206e6f74207265676973746572656400006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f696e73756666696369656e7420616d6f756e744f75744d696e696d756d0000006044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274746f6b656e4f7574206d757374206265205553444360581b6044820152606490fd5b634e487b7160e01b83526032600452602483fd5b60405162461bcd60e51b8152602060048201526024808201527f746f6b656e496e206d7573742062652077726170706564206e617469766520616044820152631cdcd95d60e21b6064820152608490fd5b60405162461bcd60e51b815260206004820152600c60248201526b0d2dcecc2d8d2c840e0c2e8d60a31b6044820152606490fd5b503461015457806003193601126101545760ff6020915460081c16604051908152f35b503461015457604036600319011261015457610c76610f87565b60243590610cae7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611872565b8115610d085761ffff168015610ccd5782526001602052604082205580f35b60405162461bcd60e51b81526020600482015260136024820152720636861696e4964206d757374206265203e203606c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f656d6974746572416464726573732063616e6e6f7420657175616c206279746560448201526573333228302960d01b6064820152608490fd5b503461015457610d6b36610f9d565b6040516370a0823160e01b80825230600483015290916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116928592602092908387602481895afa968715610f07578597610ed7575b50604091610dec918351968780948193633791a15560e11b8352600483016111ec565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1928315610ace578693610e8f575b506040519081523060048201528181602481875afa918215610ace578692610e5b575b5050610e5893610e5291611259565b9161127c565b80f35b90809250813d8311610e88575b610e72818361102d565b81010312610e84575183610e52610e43565b8480fd5b503d610e68565b9092506040813d604011610ecf575b81610eab6040938361102d565b81010312610ac257600181511015610ac25781610ec89101611186565b9138610e20565b3d9150610e9e565b9096508381813d8311610f00575b610eef818361102d565b81010312610e845751956040610dc9565b503d610ee5565b6040513d87823e3d90fd5b50346101545780600319360112610154576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90503461040757602036600319011261040757604060209261ffff610f7a610f87565b1681526001845220548152f35b6004359061ffff82168203610f9857565b600080fd5b60031990602081830112610f9857600435916001600160401b038311610f985782606092030112610f985760040190565b6001600160401b038111610fe157604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b03821117610fe157604052565b604081019081106001600160401b03821117610fe157604052565b90601f801991011681019081106001600160401b03821117610fe157604052565b6001600160401b038111610fe157601f01601f191660200190565b60c0906003190112610f98576040519061108282610ff7565b6004358252602435602083015260443560408301526064356060830152608435608083015260a4358262ffffff82168203610f985760a00152565b6001600160401b038111610fe15760051b60200190565b35906001600160a01b0382168203610f9857565b92916110f3826110bd565b91611101604051938461102d565b829481845260208094019160051b8101928311610f9857905b8282106111275750505050565b838091611133846110d4565b81520191019061111a565b60005b8381106111515750506000910152565b8181015183820152602001611141565b9060209161117a8151809281855285808601910161113e565b601f01601f1916010190565b51906001600160a01b0382168203610f9857565b9035601e1982360301811215610f985701602081359101916001600160401b038211610f98578136038313610f9857565b908060209392818452848401376000828201840152601f01601f1916010190565b9060606112569260208152611214611204848061119a565b84602085015260808401916111cb565b9061124761123c611228602087018761119a565b601f198587038101604087015295916111cb565b94604081019061119a565b939092828603019101526111cb565b90565b9190820391821161126657565b634e487b7160e01b600052601160045260246000fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448201929092526112c4916112bf82606481015b03601f19810184528361102d565b6112c6565b565b60018060a01b0316906113436040516112de81611012565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d156113ce573d916113288361104e565b92611336604051948561102d565b83523d868885013e6113d2565b805180611351575b50505050565b81849181010312610407578201519081159182150361015457506113775780808061134b565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b9192901561143457508151156113e6575090565b3b156113ef5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156114475750805190602001fd5b60405162461bcd60e51b81526020600482015290819061146b906024830190611161565b0390fd5b80516001101561147f5760400190565b634e487b7160e01b600052603260045260246000fd5b80511561147f5760200190565b919060408301519260608101519180516002101561147f5760608101519080516003101561147f576080015160a060808401519301519360405196600160f81b6020890152602188015260418701526bffffffffffffffffffffffff19809260601b16606187015260601b166075850152608984015262ffffff60e81b9060e81b1660a983015260ac82015260ac815260e081018181106001600160401b03821117610fe15760405290565b6040519061155b82610ff7565b600060a08382815282602082015260405161157581611012565b604036823760408201528260608201528260808201520152565b9190820180921161126657565b906115a561154e565b9180511561183757600160ff8183015116036118005760218151106117c35760218101518352604181511061178657604181015190602091828501526055815110611749576061810151906040918286019060601c815152606982511061170d5783607583015160601c9151015260898151106116965760898101516060860152608c8151106116d25761ffff608c82015116608086015260ac8151106116965760ac81015160a08601525160ac0361165c575050565b60649250519062461bcd60e51b8252600482015260146024820152731a5b9d985b1a59081cddd85c081c185e5b1bd85960621b6044820152fd5b815162461bcd60e51b8152600481018490526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b815162461bcd60e51b8152600481018490526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b825162461bcd60e51b8152600481018590526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606490fd5b60405162461bcd60e51b8152600481018390526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c185e5b1bd859608a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b1561187957565b60405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206e6f7420746865206465706c6f7965720000000000000000006044820152606490fd5b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301529394936020908290604490829086165afa90811561197557600091611942575b506119136112c494956112bf9261158f565b60405163095ea7b360e01b60208201526001600160a01b039094166024850152604484015282606481016112b1565b906020823d821161196d575b8161195b6020938361102d565b81010312610154575051611913611901565b3d915061194e565b6040513d6000823e3d90fd5b356001600160a01b0381168103610f985790565b6020908181840312610f98578051906001600160401b038211610f9857019180601f84011215610f985782516119ca816110bd565b936119d8604051958661102d565b818552838086019260051b820101928311610f98578301905b8282106119ff575050505090565b815181529083019083016119f1565b906060916000611a1c61154e565b506040516370a0823160e01b8082523060048301527f0000000000000000000000000000000000000000000000000000000000000000936020836024816001600160a01b0389165afa90811561201857849081926122d5575b60405163079d3ea360e31b8152945084908190611a9590600483016111ec565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19283156120185784936121dc575b506040519182523060048301526020826024816001600160a01b0389165afa80156120185784906121a2575b611b089250611259565b91815161ffff6020840151168252600160205260408220540361214c57611b32608083015161159c565b6040810180515190936001600160a01b038781169216919091149081612132575b50156120f6578251602001516001600160a01b039081167f0000000000000000000000000000000000000000000000000000000000000000909116036120a357604051928784018481106001600160401b0382111761208f576040526002845260403660208601378051516001600160a01b0316611bd085611495565b5251602001516001600160a01b0316611be88461146f565b526020810151926001600160a01b0319841661207657611c45856001600160a01b03611c1384611495565b517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691166118be565b82825189840151926040519384926338ed173960e01b845260a48401908a6004860152602485015260a060448501528251809152602060c48501930190855b81811061205157505030606485015250608483015281900381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081612037575b50611e4b5760a0015190611cef82336001600160a01b03881661127c565b611d0c611cfc8386611259565b846001600160a01b03881661127c565b611de75760405163095ea7b360e01b60208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201526000604480830191909152815260808101939091906001600160401b03851183861017610fe157611db0611db5937fda9a4112ac825b78f13f71800fb33cf4db7b43cc29219b09b7e495a75eedeade9660405260018060a01b0388166112c6565b611259565b600054604080516001600160a01b0396871681523360208201529081019290925260ff166060820152921691608090a2565b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b929091935085949551600110156120235760a080519301517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561040b57604051632e1a7d4d60e01b8152600481018590528381602481837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561201857612005575b50808402908482041484151715611ff1578115611fdd5790611f0891048093611259565b6001600160a01b0390931692818385828215611fd4575b839283928392f115611fc7578180808093818115611fbe575b3390f115611fb25754604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681523360208201529081019290925260081c60ff1660608201527fda9a4112ac825b78f13f71800fb33cf4db7b43cc29219b09b7e495a75eedeade90608090a290565b604051903d90823e3d90fd5b506108fc611f38565b50604051903d90823e3d90fd5b506108fc611f1f565b634e487b7160e01b83526012600452602483fd5b634e487b7160e01b83526011600452602483fd5b61201190939193610fce565b9138611ee4565b6040513d86823e3d90fd5b634e487b7160e01b82526032600452602482fd5b61204a903d8086833e6109ca818361102d565b5038611cd1565b82516001600160a01b0316855289965087955060209485019490920191600101611c84565b6040516326385f5160e11b815260048101859052602490fd5b634e487b7160e01b84526041600452602484fd5b60405162461bcd60e51b815260206004820152602560248201527f746f6b656e4f7574206d7573742062652077726170706564206e617469766520604482015264185cdcd95d60da1b6064820152608490fd5b60405162461bcd60e51b8152602060048201526014602482015273746f6b656e496e206d757374206265205553444360601b6044820152606490fd5b604001516001600160a01b03878116911614905038611b53565b60405162461bcd60e51b815260206004820152602860248201527f66726f6d41646472657373206973206e6f74206120726567697374657265642060448201526718dbdb9d1c9858dd60c21b6064820152608490fd5b50906020813d6020116121d4575b816121bd6020938361102d565b810103126121d05790611b089151611afe565b8380fd5b3d91506121b0565b9092503d8085833e6121ee818361102d565b8101602082820312610e845781516001600160401b0392838211610a1357019160a083830312610ac2576040519260a08401848110838211176122c15760405280518452602081015161ffff811681036122bd57602085015261225360408201611186565b6040850152898101518a8501526080810151918211610a13570181601f82011215610ac2578051906122848261104e565b92612292604051948561102d565b82845260208383010111610a1357906122b1916020808501910161113e565b60808201529138611ad2565b8780fd5b634e487b7160e01b88526041600452602488fd5b92939150506020813d602011612308575b816122f36020938361102d565b810103126121d05751611a9592918490611a75565b3d91506122e656fea264697066735822122026f67c067300fd83faff27ae30012065962b6e8d027ed7f850a0d5148706ebf264736f6c63430008130033";

type NativeSwapV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NativeSwapV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NativeSwapV2__factory extends ContractFactory {
  constructor(...args: NativeSwapV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapRouterAddress: PromiseOrValue<string>,
    _wormholeAddress: PromiseOrValue<string>,
    _orderRouterAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _wrappedNativeAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NativeSwapV2> {
    return super.deploy(
      _swapRouterAddress,
      _wormholeAddress,
      _orderRouterAddress,
      _usdcAddress,
      _wrappedNativeAddress,
      overrides || {}
    ) as Promise<NativeSwapV2>;
  }
  override getDeployTransaction(
    _swapRouterAddress: PromiseOrValue<string>,
    _wormholeAddress: PromiseOrValue<string>,
    _orderRouterAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _wrappedNativeAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapRouterAddress,
      _wormholeAddress,
      _orderRouterAddress,
      _usdcAddress,
      _wrappedNativeAddress,
      overrides || {}
    );
  }
  override attach(address: string): NativeSwapV2 {
    return super.attach(address) as NativeSwapV2;
  }
  override connect(signer: Signer): NativeSwapV2__factory {
    return super.connect(signer) as NativeSwapV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeSwapV2Interface {
    return new utils.Interface(_abi) as NativeSwapV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeSwapV2 {
    return new Contract(address, _abi, signerOrProvider) as NativeSwapV2;
  }
}
