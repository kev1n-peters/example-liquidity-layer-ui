/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPlaceMarketOrder,
  IPlaceMarketOrderInterface,
} from "../IPlaceMarketOrder";

const _abi = [
  {
    inputs: [],
    name: "MAX_NUM_RELAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "targetChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "redeemer",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "redeemerMessage",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "refundAddress",
            type: "address",
          },
        ],
        internalType: "struct PlaceMarketOrderArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "allowedRelayers",
        type: "bytes32[]",
      },
    ],
    name: "placeMarketOrder",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "targetChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "redeemer",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "redeemerMessage",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "refundAddress",
            type: "address",
          },
        ],
        internalType: "struct PlaceMarketOrderArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "placeMarketOrder",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IPlaceMarketOrder__factory {
  static readonly abi = _abi;
  static createInterface(): IPlaceMarketOrderInterface {
    return new utils.Interface(_abi) as IPlaceMarketOrderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPlaceMarketOrder {
    return new Contract(address, _abi, signerOrProvider) as IPlaceMarketOrder;
  }
}
