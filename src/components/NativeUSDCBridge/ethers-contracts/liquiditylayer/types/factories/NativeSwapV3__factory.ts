/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NativeSwapV3, NativeSwapV3Interface } from "../NativeSwapV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wormholeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_orderRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wrappedNativeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32",
      },
    ],
    name: "AddressOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "_success",
        type: "uint8",
      },
    ],
    name: "SwapResult",
    type: "event",
  },
  {
    inputs: [],
    name: "ORDER_ROUTER",
    outputs: [
      {
        internalType: "contract IOrderRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_FAILED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_ROUTER",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_SUCCEEDED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WORMHOLE",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRAPPED_NATIVE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeSwapInParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "estimatedAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "recipientAddress",
            type: "bytes32",
          },
          {
            internalType: "address[2]",
            name: "path",
            type: "address[2]",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
        ],
        internalType: "struct NativeSwapBase.RecvSwapInParameters",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetAmountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "targetChainRecipient",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct NativeSwapBase.ExactInParameters",
        name: "swapParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
    ],
    name: "encodeSwapInParameters",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedWormholeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleBridgeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleAttestation",
            type: "bytes",
          },
        ],
        internalType: "struct OrderResponse",
        name: "response",
        type: "tuple",
      },
    ],
    name: "handleOrderRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "encodedWormholeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleBridgeMessage",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "circleAttestation",
            type: "bytes",
          },
        ],
        internalType: "struct OrderResponse",
        name: "orderResponse",
        type: "tuple",
      },
    ],
    name: "recvAndSwapExactNativeIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "contractAddress",
        type: "bytes32",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "relayerFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setRelayerFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetAmountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "targetChainRecipient",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct NativeSwapBase.ExactInParameters",
        name: "swapParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint16",
        name: "targetChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "wormholeSlippage",
        type: "uint256",
      },
    ],
    name: "swapExactNativeInAndTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type NativeSwapV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NativeSwapV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NativeSwapV3__factory extends ContractFactory {
  constructor(...args: NativeSwapV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapRouterAddress: PromiseOrValue<string>,
    _wormholeAddress: PromiseOrValue<string>,
    _orderRouterAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _wrappedNativeAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NativeSwapV3> {
    return super.deploy(
      _swapRouterAddress,
      _wormholeAddress,
      _orderRouterAddress,
      _usdcAddress,
      _wrappedNativeAddress,
      overrides || {}
    ) as Promise<NativeSwapV3>;
  }
  override getDeployTransaction(
    _swapRouterAddress: PromiseOrValue<string>,
    _wormholeAddress: PromiseOrValue<string>,
    _orderRouterAddress: PromiseOrValue<string>,
    _usdcAddress: PromiseOrValue<string>,
    _wrappedNativeAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapRouterAddress,
      _wormholeAddress,
      _orderRouterAddress,
      _usdcAddress,
      _wrappedNativeAddress,
      overrides || {}
    );
  }
  override attach(address: string): NativeSwapV3 {
    return super.attach(address) as NativeSwapV3;
  }
  override connect(signer: Signer): NativeSwapV3__factory {
    return super.connect(signer) as NativeSwapV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeSwapV3Interface {
    return new utils.Interface(_abi) as NativeSwapV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeSwapV3 {
    return new Contract(address, _abi, signerOrProvider) as NativeSwapV3;
  }
}
