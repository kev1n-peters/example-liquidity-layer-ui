/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export type PlaceMarketOrderArgsStruct = {
  amountIn: PromiseOrValue<BigNumberish>;
  minAmountOut: PromiseOrValue<BigNumberish>;
  targetChain: PromiseOrValue<BigNumberish>;
  redeemer: PromiseOrValue<BytesLike>;
  redeemerMessage: PromiseOrValue<BytesLike>;
  refundAddress: PromiseOrValue<string>;
};

export type PlaceMarketOrderArgsStructOutput = [
  BigNumber,
  BigNumber,
  number,
  string,
  string,
  string
] & {
  amountIn: BigNumber;
  minAmountOut: BigNumber;
  targetChain: number;
  redeemer: string;
  redeemerMessage: string;
  refundAddress: string;
};

export interface IPlaceMarketOrderInterface extends utils.Interface {
  functions: {
    "MAX_NUM_RELAYERS()": FunctionFragment;
    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])": FunctionFragment;
    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "MAX_NUM_RELAYERS"
      | "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])"
      | "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MAX_NUM_RELAYERS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])",
    values: [
      PlaceMarketOrderArgsStruct,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))",
    values: [PlaceMarketOrderArgsStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_NUM_RELAYERS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IPlaceMarketOrder extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPlaceMarketOrderInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MAX_NUM_RELAYERS(overrides?: CallOverrides): Promise<[BigNumber]>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])"(
      args: PlaceMarketOrderArgsStruct,
      relayerFee: PromiseOrValue<BigNumberish>,
      allowedRelayers: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))"(
      args: PlaceMarketOrderArgsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  MAX_NUM_RELAYERS(overrides?: CallOverrides): Promise<BigNumber>;

  "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])"(
    args: PlaceMarketOrderArgsStruct,
    relayerFee: PromiseOrValue<BigNumberish>,
    allowedRelayers: PromiseOrValue<BytesLike>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))"(
    args: PlaceMarketOrderArgsStruct,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    MAX_NUM_RELAYERS(overrides?: CallOverrides): Promise<BigNumber>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])"(
      args: PlaceMarketOrderArgsStruct,
      relayerFee: PromiseOrValue<BigNumberish>,
      allowedRelayers: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))"(
      args: PlaceMarketOrderArgsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    MAX_NUM_RELAYERS(overrides?: CallOverrides): Promise<BigNumber>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])"(
      args: PlaceMarketOrderArgsStruct,
      relayerFee: PromiseOrValue<BigNumberish>,
      allowedRelayers: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))"(
      args: PlaceMarketOrderArgsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAX_NUM_RELAYERS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address),uint256,bytes32[])"(
      args: PlaceMarketOrderArgsStruct,
      relayerFee: PromiseOrValue<BigNumberish>,
      allowedRelayers: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "placeMarketOrder((uint256,uint256,uint16,bytes32,bytes,address))"(
      args: PlaceMarketOrderArgsStruct,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
